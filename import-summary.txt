ECLIPSE ANDROID PROJECT IMPORT SUMMARY
======================================

Ignored Files:
--------------
The following files were *not* copied into the new Gradle project; you
should evaluate whether these are still needed in your project and if
so manually move them:

* _DS_Store
* __.DS_Store
* _classpath
* _project

Moved Files:
------------
Android Gradle projects use a different directory structure than ADT
Eclipse projects. Here's how the projects were restructured:

* AndroidManifest.xml => UnityPlayerNativeActivity\src\main\AndroidManifest.xml
* assets\ => UnityPlayerNativeActivity\src\main\assets\
* libs\armeabi-v7a\libmain.so => UnityPlayerNativeActivity\src\main\jniLibs\armeabi-v7a\libmain.so
* libs\armeabi-v7a\libmono.so => UnityPlayerNativeActivity\src\main\jniLibs\armeabi-v7a\libmono.so
* libs\armeabi-v7a\libunity.so => UnityPlayerNativeActivity\src\main\jniLibs\armeabi-v7a\libunity.so
* libs\armeabi-v7a\libvhwrapper.so => UnityPlayerNativeActivity\src\main\jniLibs\armeabi-v7a\libvhwrapper.so
* libs\armeabi-v7a\libvhwrapper_copy.so => UnityPlayerNativeActivity\src\main\jniLibs\armeabi-v7a\libvhwrapper_copy.so
* libs\unity-classes.jar => UnityPlayerNativeActivity\libs\unity-classes.jar
* lint.xml => UnityPlayerNativeActivity\lint.xml
* res\ => UnityPlayerNativeActivity\src\main\res\
* src\ => UnityPlayerNativeActivity\src\main\java\

Next Steps:
-----------
You can now build the project. The Gradle project needs network
connectivity to download dependencies.

Bugs:
-----
If for some reason your project does not build, and you determine that
it is due to a bug or limitation of the Eclipse to Gradle importer,
please file a bug at http://b.android.com with category
Component-Tools.

(This import summary is for your information only, and can be deleted
after import once you are satisfied with the results.)
